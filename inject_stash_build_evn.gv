mport groovy.grape.Grape
@Grab(group='org.codehaus.groovy.modules.http-builder', module='http-builder', version='0.5.2')
import groovyx.net.http.HTTPBuilder
import groovyx.net.http.Method
import hudson.model.*
import hudson.EnvVars
import hudson.model.Environment
import groovy.io.FileType
import java.io.File
System.setProperty("https.protocols", "TLSv1.1");


def getRepoPR(project,repo ){
    def map
    def varkey = project + "_" + repo
    def remote = new HTTPBuilder("https://stashurl.com")
    System.setProperty("https.protocols", "TLSv1.1");
    def issueJson = remote.request(Method.GET) { req ->
        uri.path = "/rest/api/1.0/projects/${project}/repos/${repo}/pull-requests/"
        headers.'Authorization' ="Basic ${"username:password".bytes.encodeBase64().toString()}"
        uri.query = [state: "MERGED",at:"refs/heads/master",limit:1]
        response.success = { resp, json ->
            json ?: [:]
            println "project : $project  repo : $repo LastPR : ${json.values.id[0]} "
            map =  json.values.id[0]
            }
        }

    return map
}


def repolist = ['projectA/repoA','projectB/repoB']
def result  = [:]
for (item in repolist ) {
   project = item.split(/\//)[0]
   repo = item.split(/\//)[1]
   var = project + "_" + repo + "_"  +  "pr"
   result[var] =  getRepoPR(project,repo)
}
backmessage = result
backmessage["repolist"] = repolist 
return  backmessage 
